From 8b4d146171210508e651947b023750a85da7732b Mon Sep 17 00:00:00 2001
From: Benjamin Berkels <berkels@aices.rwth-aachen.de>
Date: Tue, 20 Oct 2020 12:41:56 +0200
Subject: [PATCH] updated QuocMesh base: - Fixed: Some of the get functions of
 aol::TransparentIndexTranslationMatrix that should return references did not.

---
 quocmesh/modules/aol/indexTranslationMatrix.h | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/quocmesh/modules/aol/indexTranslationMatrix.h b/quocmesh/modules/aol/indexTranslationMatrix.h
index 081dfa9..fe33c3d 100644
--- a/quocmesh/modules/aol/indexTranslationMatrix.h
+++ b/quocmesh/modules/aol/indexTranslationMatrix.h
@@ -121,9 +121,9 @@ class TransparentIndexTranslationMatrix : public MatrixType {
   int getSizeSmall() const;
   int getSizeLarge() const;
 
-  const Vector<int> getSmallToLargePreimage() const;
-  const Vector<int> getSmallToLargeImage() const;
-  const Vector<int> getSmallToLarge () const;
+  const Vector<int>& getSmallToLargePreimage() const;
+  const Vector<int>& getSmallToLargeImage() const;
+  const Vector<int>& getSmallToLarge () const;
 
   ApplyModeOnUnusedNodes getApplyModeOnUnusedNodes() const;
   void setApplyModeOnUnusedNodes ( ApplyModeOnUnusedNodes mode );
@@ -468,7 +468,7 @@ getSizeLarge() const {
 //---------------------------------------------------------------------------
 
 template <typename MatrixType, typename LargeDomainType, typename LargeRangeType>
-const Vector<int> TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
+const Vector<int>& TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
 getSmallToLargePreimage() const {
   return _preimSmallToLarge;
 }
@@ -476,7 +476,7 @@ getSmallToLargePreimage() const {
 //---------------------------------------------------------------------------
 
 template <typename MatrixType, typename LargeDomainType, typename LargeRangeType>
-const Vector<int> TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
+const Vector<int>& TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
 getSmallToLargeImage() const {
   return _imSmallToLarge;
 }
@@ -484,7 +484,7 @@ getSmallToLargeImage() const {
 //---------------------------------------------------------------------------
 
 template <typename MatrixType, typename LargeDomainType, typename LargeRangeType>
-const Vector<int> TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
+const Vector<int>& TransparentIndexTranslationMatrix<MatrixType, LargeDomainType, LargeRangeType>::
 getSmallToLarge () const {
   QUOC_ASSERT ( _translationIsSymmetric );
   return getSmallToLargeImage();
